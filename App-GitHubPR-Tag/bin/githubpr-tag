#!/usr/bin/env perl
#

use feature qw/say/;

use App::GitHubPR::Tag;
use Data::Printer;
use Try::Tiny::Retry;

my $app = App::GitHubPR::Tag->new_with_options();
$app->init_pull_request;

for my $pr ( @{ $app->_prs } ) {
    my $pr_number = $pr->{number};

    my $pr_data = $app->pull($pr_number);

    my $pr_merge_state;
    retry {
        $pr_merge_state = $pr_data->{mergeable_state};
        say STDERR "$pr_number: $pr_merge_state";
        $pr_merge_state;
    }
    retry_if { $pr_merge_state eq 'unknown' }
    catch { say STDERR "Retrying merge state retrieval..." };

    my $issue = $app->_github->issue;
    $issue->set_default_user_repo( $app->repo_user, $app->repo_name );

    my @pr_labels = map { $_->{name} } $issue->issue_labels($pr_number);

    my $tag = $app->tag;
    if ( ( $pr_merge_state ne 'dirty' ) && ( grep {/$tag/} @pr_labels ) ) {
        say "Removing tag on [$pr_number]...";
        if ( !$app->dry_run ) {
            $issue->delete_issue_label( $pr_number, $tag );
        }
    }

    if ( ( $pr_merge_state eq 'dirty' ) && ( !grep {/$tag/} @pr_labels ) ) {
        say "Adding tag on [$pr_number]...";
        if ( !$app->dry_run ) {
            $issue->replace_issue_label( $pr_number, [ @pr_labels, $tag ] );
        }
    }
}
